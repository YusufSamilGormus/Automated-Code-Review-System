// <auto-generated />
using System;
using CodeReviewAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CodeReviewAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CodeReviewAPI.Models.CodeReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BestPractices")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodeSmells")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CodeSubmissionId")
                        .HasColumnType("integer");

                    b.Property<string>("DesignWeaknesses")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentationIssues")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImplementationWeaknesses")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LogicErrors")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaintainabilityIssues")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PerformanceIssues")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReviewedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityIssues")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Strengths")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Suggestions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SyntaxErrors")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestingWeaknesses")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CodeSubmissionId");

                    b.ToTable("CodeReviews");
                });

            modelBuilder.Entity("CodeReviewAPI.Models.CodeSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CodeSubmissions");
                });

            modelBuilder.Entity("CodeReviewAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailVerificationToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EmailVerificationTokenExpires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CodeReviewAPI.Models.CodeReview", b =>
                {
                    b.HasOne("CodeReviewAPI.Models.CodeSubmission", "CodeSubmission")
                        .WithMany("Reviews")
                        .HasForeignKey("CodeSubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeSubmission");
                });

            modelBuilder.Entity("CodeReviewAPI.Models.CodeSubmission", b =>
                {
                    b.HasOne("CodeReviewAPI.Models.User", "User")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodeReviewAPI.Models.CodeSubmission", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("CodeReviewAPI.Models.User", b =>
                {
                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
